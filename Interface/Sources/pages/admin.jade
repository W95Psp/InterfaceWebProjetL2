:php
	if(@$urlParams[1]=='deleteNewEtudiants'){// A supprimer, c'est juste pour les tests
		$db->query('DELETE FROM Etudiant WHERE `telEtu` IS NULL;ALTER TABLE Etudiant AUTO_INCREMENT = 1;');
		die('DONE.');
	}
	if(count($urlParams)>2 && $urlParams[1]=='etudiants' && $urlParams[2]=='import' && isset($_POST['Data'])){
		$Data = json_decode($_POST['Data']);
		$str = "SET @promo=(SELECT * FROM LAST_PROMO_ID);INSERT INTO Etudiant (nomEtu, prenomEtu, emailEtu, idPromo) VALUES";
		$first = true;
		foreach($Data as $line){
			if(!$first)
				$str.=',';
			$str.='(';
			$str.='"'.$line[0].'",';
			$str.='"'.$line[1].'",';
			$str.='"'.$line[2].'"';
			$str.=',@promo)';
			$first = false;
		}
		$db->query($str.';');
div(style='text-align: center; padding: 40px;') Import effectué
:php
	}else{
script(src='/scripts/admin.js')
style.
	h1{
		display: inline-block;
		float: left;
		font-size: 24px;
		padding: 10px;
		padding-top: 0px;
		padding-bottom: 0px;
		color: #bdc3c7;
		transition: color 100ms linear;
		position: relative;
		top: 0px;
		cursor: default;
		margin: 0px;
	}
	h1[state='true']{
		color: black;
		transition: color 100ms linear;
	}
	h1:hover{
		top: -2px;
		transition: top 100ms ease-out;
	}
	.view{
		width: 760px;
		overflow: hidden;
	}
	.panels{
		position: relative;
		width: 4700px;
	}
	.panels[state="0"]{left: 0px;		transition: left 400ms ease-out;}
	.panels[state="1"]{left: -760px;	transition: left 400ms ease-out;}
	.panels[state="2"]{left: -1520px;	transition: left 400ms ease-out;}
	.panels[state="3"]{left: -2280px;	transition: left 400ms ease-out;}
	.panels[state="4"]{left: -3040px;	transition: left 400ms ease-out;}
	.panels[state="5"]{left: -3800px;	transition: left 400ms ease-out;}

	.panel{
		float: left;
		width: 760px;
	}
script(type="text/javascript", src="TinyEditor/packed.js")
link(rel="stylesheet", href="TinyEditor/style.css")
:php
	if(isset($parseParam[1], $parseParam[2], $_POST['content']) && $parseParam[1]=='presentation' && $parseParam[2]=='update'){
		$html = explode('<style>*{font-family: \'Open Sans\';}</style>', $_POST['content'], 2)[1];
		file_put_contents('pages/presentation-content.html', $html);
	}
	echo '<div class=\'page interface-admin\' ng-controller=\'admin\' ng-init=\'';
	if(isset($parseParam[1]) && $parseParam[1]=='presentation')
		echo 'currentPage = 2;';
	echo '\'>';

h1(ng-repeat='(k,page) in pages', state='{{currentPage==k}}', ng-click='$parent.currentPage=k') {{page}}
br
.view
	.panels(state='{{currentPage}}')
		.panel
			h2 [Page à inclure ici] ~T1
		.panel 
			h2 [Page à inclure ici] ~T2
		.panel 
			h2 Page de présentation
			form(method='POST', action='/?admin/presentation/update')
				textarea(id="input", name='content', style="width:760px; height:400px; margin: auto;")
					link(rel="stylesheet", href="http://fonts.googleapis.com/css?family=Open+Sans:300")
					style *{font-family: 'Open Sans';}
					:php
						echo file_get_contents('pages/presentation-content.html');
				script.
					var editor = new TINY.editor.edit('editor',{
						id:'input',
						width:660,
						height:300,
						cssclass:'te',
						controlclass:'tecontrol',
						rowclass:'teheader',
						dividerclass:'tedivider',
						controls:['bold','italic','underline','strikethrough','|','subscript','superscript','|',
								  'orderedlist','unorderedlist','|','outdent','indent','|','leftalign',
								  'centeralign','rightalign','blockjustify','|','unformat','|','undo','redo','n',
								  'image','hr','link','unlink','|','cut','copy','paste','print'],
						footer:true,
						fonts:['Open Sans','Arial','Georgia','Trebuchet MS'],
						xhtml:true,
						cssfile:'style.css',
						bodyid:'editor',
						footerclass:'tefooter',
						resize:{cssclass:'resize'}
					});
				button(onclick='editor.post();') Mettre à jour
		.panel 
			h2 [Page à inclure ici] ~T4
		.panel
			h2 Etudiants
			p.
				Chaque année, il est nécéssaire d'alimenter la base de donnée avec une liste des étudiants autorisés à se connecter. De cette façon, seuls les étudiants de L2/L3 qui ont une UE de projet peuvent utiliser le site.
			p.
				Importez ici un fichier csv de la liste des étuidants. Le fichier csv peut être sous n'importe quelle forme mais doit rensigner au moins : nom, prénom et email.
			div.part(ng-show='etudiantsMode==0')
				h3
					img.upImg(src='images/icons/upload.png')
					span Uploadez votre document
					a(href='sample_data_to_delete.csv', style='font-size: 9px; padding-left: 10px;') [Télécharger un sample pour essayer]
				div
					b Parcourir : 
					input(type="file", id="fichier_csv", name="fichier_csv", onchange='importData(this.files)', style='display: block; padding: 10px;')
				div
					b ... Ou glissez le directement ici :
					#dragDropArea Déposer votre CSV ici !
			div.part(ng-show='etudiantsMode==1', style='width: 90% !important;')
				h3
					img.upImg(src='images/icons/work.png')
					span Choisir les données à importer
					button(class='{{(completed ? "green" : "disabled")}}', style='float: right;', ng-click='completed && convertCSV()') Importer {{etudiantsData.length-firstLineHeader}} données
				div
					input(type='checkbox', ng-model='firstLineHeader')
					span La première ligne du fichier est une entête
					br
					span Séparateur : 
					input(type='text', ng-model='separator')
				div.errTwoSameInfo(ng-if='twoSameInfo')
					span.title Erreur : 
					span Plusieurs colonnes ont le même rôle (
					span.detail(ng-repeat='det in twoSameInfoDetails') {{det}}
					span ). Une seule colonne peut correspondre à une seule information.
				div(style='width: 100%; overflow: auto;')
					table.preview
						tr(ng-if='etudiantsData.length>0', firstLine='true')
							td(ng-repeat='(k, columnName) in tmp = (etudiantsData[0] | parseCsv) track by $index')
								span(ng-show='!firstLineHeader') Col. n°{{k+1}}
								span(ng-show='firstLineHeader') {{columnName}}
								br
								select(ng-model="columns[k]", ng-options="o as o for o in columnsOptions")
						tr(ng-repeat='(k, line) in etudiantsData | limitTo:15', ng-hide='firstLineHeader && k==0')
							td(ng-repeat='(k, columnName) in tmp = (line | parseCsv) track by $index')
								| {{columnName}}
			div.part(ng-show='etudiantsMode==2', style='width: 90% !important;')
				h3
					span Résumé des données à importer
					a(href='/?admin/etudiants')
						button(class='green', style='float: right;') Annuler
					form(style='display: inline;', method='POST', action='/?admin/etudiants/import')
						input(type='hidden', name='Data', value='')
						button(class='red', onclick='confirmAndSent(this)', style='float: right; margin-right: 18px;') Confirmer
				p.
					Voilà les données que vous êtes sur le point d'importer. Vous pouvez parcourir le contenu à l'aide des filtres. Les filtres ne sont là que pour la visualisation, toutes les données seront au final importées.
				p.
					Seuls les premiers résultats sont affichés, pour ne pas surcharger votre navigateur.
				table.sumup
					tr
						td(ng-repeat='col in columnsOptions')
							span(ng-if='col==columnsOptions[0]')
								| #
							span(ng-if='col!=columnsOptions[0]')
								| {{col}}
					tr
						td(ng-repeat='col in columnsOptions')
							input(ng-if='col!=columnsOptions[0]', ng-model='filterEtDatFin[col]', type='text')
					tr(ng-repeat='(k,line) in etudiantsDataFinal | filter:filterEtDatFin | limitTo:20')
						td(ng-repeat='col in columnsOptions')
							span(ng-if='col==columnsOptions[0]')
								| {{k}}
							span(ng-if='col!=columnsOptions[0]')
								| {{line[col]}}
				div(style='text-align: center;') ({{etudiantsDataFinal.length-20}} étudiants ne sont pas affichés)
		.panel
			h2 Promos
			table
				tr
					th Identifiant
					th Description
					th Responsable
					th Ouverture
					th Fermeture
					th Active ?
				tr
					td null
					td null
					td null
					td null
					td null
					td null
:php
	echo '</div>';
	}